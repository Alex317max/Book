{"ast":null,"code":"// src/components/BookingTab.js\nimport React,{useState,useEffect,useCallback,useContext}from'react';import{fetchOffices,fetchDesks,bookDesk}from'../api';import{UserContext}from'../App';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BookingTab=()=>{const currentUser=useContext(UserContext);const[offices,setOffices]=useState([]);const[selectedOfficeId,setSelectedOfficeId]=useState('');// --- ИСПРАВЛЕННЫЕ ФУНКЦИИ ДЛЯ РАБОТЫ С ДАТАМИ ---\nconst getMonday=date=>{const d=new Date(date);const day=d.getDay();// 0 (Вс) - 6 (Сб)\nconst diff=d.getDate()-day+(day===0?-6:1);// Коррекция для Вс (day === 0)\nreturn new Date(d.setDate(diff));};const getInitialSelectedDate=()=>{const today=new Date();const dayOfWeek=today.getDay();// 0 (Вс) - 6 (Сб)\n// Если сегодня Сб (6) или Вс (0), переносим selectedDate на следующий понедельник\nif(dayOfWeek===6){// Суббота\nconst nextMonday=new Date(today);nextMonday.setDate(today.getDate()+2);return getMonday(nextMonday);// Убедимся, что это понедельник\n}else if(dayOfWeek===0){// Воскресенье\nconst nextMonday=new Date(today);nextMonday.setDate(today.getDate()+1);return getMonday(nextMonday);// Убедимся, что это понедельник\n}// Для будних дней оставляем текущий день, но currentWeekStart будет понедельником этой недели\nreturn today;};// --- КОНЕЦ ИСПРАВЛЕННЫХ ФУНКЦИЙ ---\n// Инициализация состояний с использованием новых функций\nconst initialSelectedDate=getInitialSelectedDate();const initialWeekStart=getMonday(initialSelectedDate);// Понедельник недели, к которой относится initialSelectedDate\nconst[selectedDate,setSelectedDate]=useState(initialSelectedDate);const[currentWeekStart,setCurrentWeekStart]=useState(initialWeekStart);// --- КОНЕЦ ИНИЦИАЛИЗАЦИИ ---\nconst[desks,setDesks]=useState([]);const[showModal,setShowModal]=useState(false);const[currentDeskForModal,setCurrentDeskForModal]=useState(null);const[bookingTimeSlot,setBookingTimeSlot]=useState('AM');const[isLoadingDesks,setIsLoadingDesks]=useState(false);const[errorDesks,setErrorDesks]=useState('');const[bookingMessage,setBookingMessage]=useState({text:'',type:''});const loadOffices=useCallback(async()=>{// ... (без изменений)\ntry{const data=await fetchOffices();setOffices(data);}catch(error){setBookingMessage({text:`Ошибка загрузки офисов: ${error.message}`,type:'danger'});}},[]);const loadDesks=useCallback(async(officeId,date)=>{// ... (без изменений)\nif(!officeId){setDesks([]);setErrorDesks('');return;}setIsLoadingDesks(true);setErrorDesks('');try{// Убедимся, что передаем объект Date\nconst dateObj=date instanceof Date?date:new Date(date);const data=await fetchDesks(officeId,dateObj);setDesks(data);}catch(error){setErrorDesks(error.message||'Ошибка загрузки столов');setDesks([]);}finally{setIsLoadingDesks(false);}},[]);useEffect(()=>{loadOffices();},[loadOffices]);useEffect(()=>{if(selectedOfficeId&&selectedDate){// Добавил проверку selectedDate\nloadDesks(selectedOfficeId,selectedDate);}else{setDesks([]);}},[selectedOfficeId,selectedDate,loadDesks]);const handleOfficeChange=e=>setSelectedOfficeId(e.target.value);const handleDayClick=date=>{setSelectedDate(new Date(date));// Убедимся, что это новый объект Date\n};const handleWeekChange=direction=>{const newWeekStartCandidate=new Date(currentWeekStart);newWeekStartCandidate.setDate(newWeekStartCandidate.getDate()+(direction==='next'?7:-7));// Устанавливаем currentWeekStart на понедельник этой новой недели\nconst newActualWeekStart=getMonday(newWeekStartCandidate);setCurrentWeekStart(newActualWeekStart);// Устанавливаем selectedDate на первый рабочий день этой новой недели (понедельник)\n// или на текущий день, если он попадает в новую неделю и является рабочим.\n// Для простоты, всегда будем ставить на понедельник новой недели.\nlet newSelectedDate=new Date(newActualWeekStart);// Если новая выбранная дата (понедельник) раньше сегодняшнего дня,\n// и это не текущая неделя, то может быть, стоит выбрать сегодняшний день, если он в этой неделе.\n// Но для консистентности, при переключении недель, всегда будем выбирать понедельник.\n// Если нужно более сложное поведение (например, не давать выбирать прошедшие дни), это отдельная логика.\n// Пропускаем выходные, если вдруг newActualWeekStart оказался не понедельником (хотя getMonday должен это обеспечить)\n// Эта логика уже не так нужна, если getMonday работает правильно.\n// if (newSelectedDate.getDay() === 0) newSelectedDate.setDate(newSelectedDate.getDate() + 1);\n// else if (newSelectedDate.getDay() === 6) newSelectedDate.setDate(newSelectedDate.getDate() + 2);\nsetSelectedDate(newSelectedDate);};const handleOpenModal=desk=>{// ... (без изменений)\nif(!currentUser||!currentUser.display_name&&!currentUser.telegram_first_name){setBookingMessage({text:'Пожалуйста, сначала установите ваше имя в профиле (кнопка вверху).',type:'warning'});setTimeout(()=>setBookingMessage({text:'',type:''}),4000);return;}setCurrentDeskForModal(desk);if(desk.availability_slots.AM.status==='free')setBookingTimeSlot('AM');else if(desk.availability_slots.PM.status==='free')setBookingTimeSlot('PM');else setBookingTimeSlot('AM');setShowModal(true);};const handleBookDesk=async()=>{// ... (без изменений)\nif(!currentDeskForModal||!bookingTimeSlot){setBookingMessage({text:'Ошибка: Не выбран стол или время.',type:'danger'});setTimeout(()=>setBookingMessage({text:'',type:''}),3000);return;}const deskId=currentDeskForModal.id;let bookingSuccessful=true;try{if(bookingTimeSlot==='FULL'){if(currentDeskForModal.availability_slots.AM.status==='free'){await bookDesk(deskId,selectedDate,'AM');}else{throw new Error('Утренний слот уже занят для бронирования на весь день.');}if(currentDeskForModal.availability_slots.PM.status==='free'){await bookDesk(deskId,selectedDate,'PM');}else{throw new Error('Вечерний слот уже занят. Бронь на утро была сделана, но на вечер не удалась.');}setBookingMessage({text:`Стол ${currentDeskForModal.name||deskId} забронирован на весь день!`,type:'success'});}else{await bookDesk(deskId,selectedDate,bookingTimeSlot);setBookingMessage({text:`Стол ${currentDeskForModal.name||deskId} забронирован на ${bookingTimeSlot==='AM'?'утро':'вечер'}!`,type:'success'});}}catch(error){bookingSuccessful=false;setBookingMessage({text:`Ошибка бронирования: ${error.message}`,type:'danger'});}finally{if(bookingSuccessful){loadDesks(selectedOfficeId,selectedDate);setShowModal(false);}setTimeout(()=>setBookingMessage({text:'',type:''}),5000);}};const getDeskCardClass=desk=>{/* ... без изменений ... */const amStatus=desk.availability_slots.AM.status;const pmStatus=desk.availability_slots.PM.status;if(amStatus==='booked'&&pmStatus==='booked')return'border-danger bg-danger-subtle';if(amStatus==='booked'||pmStatus==='booked')return'border-warning bg-warning-subtle';return'border-success bg-success-subtle';};const renderDaySelector=()=>{const days=[];const today=new Date();today.setHours(0,0,0,0);// Нормализуем today для сравнения только дат\nfor(let i=0;i<5;i++){// Пн-Пт\nconst date=new Date(currentWeekStart);date.setDate(date.getDate()+i);date.setHours(0,0,0,0);// Нормализуем для сравнения\nconst isTodayDate=date.toDateString()===today.toDateString();const isActive=date.toDateString()===selectedDate.toDateString();// Логика для отключения прошедших дней (опционально)\n// const isPast = date < today;\n// if (isPast && !isTodayDate) { // Не отображаем прошедшие дни, кроме сегодняшнего\n//     // или делаем их disabled\n// }\ndays.push(/*#__PURE__*/_jsxs(\"button\",{className:`btn btn-sm flex-grow-1 ${isActive?'active btn-primary':isTodayDate?'btn-info':'btn-outline-secondary'}`,onClick:()=>handleDayClick(date)// disabled={isPast && !isTodayDate} // Пример отключения прошедших дней\n,children:[/*#__PURE__*/_jsx(\"div\",{className:\"small\",children:date.toLocaleDateString('ru-RU',{weekday:'short'}).toUpperCase()}),/*#__PURE__*/_jsx(\"div\",{className:\"fw-bold\",children:date.getDate()})]},i));}return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between gap-1\",children:days});};const weekEnd=new Date(currentWeekStart);weekEnd.setDate(currentWeekStart.getDate()+4);// Пятница\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"office-select-booking\",className:\"form-label\",children:\"\\u041E\\u0444\\u0438\\u0441:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"office-select-booking\",className:\"form-select\",value:selectedOfficeId,onChange:handleOfficeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0444\\u0438\\u0441 --\"}),offices.map(office=>/*#__PURE__*/_jsx(\"option\",{value:office.id,children:office.name},office.id))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-column align-items-center justify-content-center h-100\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"current-week\",className:\"text-center fw-bold small\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleWeekChange('prev'),className:\"btn btn-outline-secondary btn-sm me-2\",children:\"\\u2190\"}),/*#__PURE__*/_jsxs(\"span\",{children:[currentWeekStart.toLocaleDateString('ru-RU',{day:'numeric',month:'short'}),\" \\u2013 \",weekEnd.toLocaleDateString('ru-RU',{day:'numeric',month:'short'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleWeekChange('next'),className:\"btn btn-outline-secondary btn-sm ms-2\",children:\"\\u2192\"})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gap-2 my-3\",id:\"day-selector\",children:renderDaySelector()})]})}),bookingMessage.text&&/*#__PURE__*/_jsxs(\"div\",{className:`alert alert-${bookingMessage.type} alert-dismissible fade show`,role:\"alert\",children:[bookingMessage.text,/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>setBookingMessage({text:'',type:''}),\"aria-label\":\"Close\"})]}),isLoadingDesks&&/*#__PURE__*/_jsx(\"p\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432...\"}),errorDesks&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",children:[errorDesks,\" \",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link\",onClick:()=>loadDesks(selectedOfficeId,selectedDate),children:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"})]}),!isLoadingDesks&&!errorDesks&&selectedOfficeId&&desks.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0439 \\u0434\\u0430\\u0442\\u044B \\u0438\\u043B\\u0438 \\u043E\\u0444\\u0438\\u0441 \\u043F\\u0443\\u0441\\u0442.\"}),!isLoadingDesks&&!errorDesks&&!selectedOfficeId&&/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0444\\u0438\\u0441 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",id:\"desk-container\",children:desks.map(desk=>/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 col-lg-3 mb-3\",children:/*#__PURE__*/_jsx(\"div\",{className:`card h-100 ${getDeskCardClass(desk)}`,style:{cursor:desk.availability_slots.AM.status==='free'||desk.availability_slots.PM.status==='free'?'pointer':'default'},onClick:()=>desk.availability_slots.AM.status==='free'||desk.availability_slots.PM.status==='free'?handleOpenModal(desk):null,children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body d-flex flex-column align-items-center justify-content-center text-center p-2\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title mb-1 h6\",children:desk.name||`Стол ${desk.id}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted small mb-1\",children:desk.office_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`badge rounded-pill text-bg-${desk.availability_slots.AM.status==='free'?'success':'danger'} me-1`,children:[\"\\u0423\\u0442\\u0440\\u043E \",desk.availability_slots.AM.status==='booked'&&desk.availability_slots.AM.user_display_name?`(${desk.availability_slots.AM.user_display_name})`:'']}),/*#__PURE__*/_jsxs(\"span\",{className:`badge rounded-pill text-bg-${desk.availability_slots.PM.status==='free'?'success':'danger'}`,children:[\"\\u0412\\u0435\\u0447\\u0435\\u0440 \",desk.availability_slots.PM.status==='booked'&&desk.availability_slots.PM.user_display_name?`(${desk.availability_slots.PM.user_display_name})`:'']})]})]})})},desk.id))}),showModal&&currentDeskForModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal show d-block\",tabIndex:\"-1\",role:\"dialog\",style:{backgroundColor:'rgba(0,0,0,0.5)'},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered\",role:\"document\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"modal-title\",children:[\"\\u0411\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435: \",currentDeskForModal.name||`Стол ${currentDeskForModal.id}`]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>setShowModal(false)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0414\\u0430\\u0442\\u0430:\"}),\" \",selectedDate.toLocaleDateString('ru-RU')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041E\\u0444\\u0438\\u0441:\"}),\" \",currentDeskForModal.office_name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"time-slot\",id:\"slot-am\",value:\"AM\",checked:bookingTimeSlot==='AM',onChange:e=>setBookingTimeSlot(e.target.value),disabled:currentDeskForModal.availability_slots.AM.status!=='free'}),/*#__PURE__*/_jsxs(\"label\",{className:`form-check-label d-block ${currentDeskForModal.availability_slots.AM.status!=='free'?'text-muted':''}`,htmlFor:\"slot-am\",children:[\"\\u0423\\u0442\\u0440\\u043E\",currentDeskForModal.availability_slots.AM.status==='free'?/*#__PURE__*/_jsx(\"span\",{className:\"text-success small\",children:\" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger small\",children:[\" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \",currentDeskForModal.availability_slots.AM.user_display_name||'',\")\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"time-slot\",id:\"slot-pm\",value:\"PM\",checked:bookingTimeSlot==='PM',onChange:e=>setBookingTimeSlot(e.target.value),disabled:currentDeskForModal.availability_slots.PM.status!=='free'}),/*#__PURE__*/_jsxs(\"label\",{className:`form-check-label d-block ${currentDeskForModal.availability_slots.PM.status!=='free'?'text-muted':''}`,htmlFor:\"slot-pm\",children:[\"\\u0412\\u0435\\u0447\\u0435\\u0440\",currentDeskForModal.availability_slots.PM.status==='free'?/*#__PURE__*/_jsx(\"span\",{className:\"text-success small\",children:\" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger small\",children:[\" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \",currentDeskForModal.availability_slots.PM.user_display_name||'',\")\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"time-slot\",id:\"slot-full\",value:\"FULL\",checked:bookingTimeSlot==='FULL',onChange:e=>setBookingTimeSlot(e.target.value),disabled:currentDeskForModal.availability_slots.AM.status!=='free'||currentDeskForModal.availability_slots.PM.status!=='free'}),/*#__PURE__*/_jsxs(\"label\",{className:`form-check-label d-block ${currentDeskForModal.availability_slots.AM.status!=='free'||currentDeskForModal.availability_slots.PM.status!=='free'?'text-muted':''}`,htmlFor:\"slot-full\",children:[\"\\u0412\\u0435\\u0441\\u044C \\u0434\\u0435\\u043D\\u044C\",currentDeskForModal.availability_slots.AM.status==='free'&&currentDeskForModal.availability_slots.PM.status==='free'?/*#__PURE__*/_jsx(\"span\",{className:\"text-success small\",children:\" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-warning small\",children:\" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \\u0447\\u0430\\u0441\\u0442\\u0438\\u0447\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043F\\u043E\\u043B\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E)\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>setShowModal(false),children:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:handleBookDesk,disabled:!bookingTimeSlot||bookingTimeSlot==='AM'&&currentDeskForModal.availability_slots.AM.status!=='free'||bookingTimeSlot==='PM'&&currentDeskForModal.availability_slots.PM.status!=='free'||bookingTimeSlot==='FULL'&&(currentDeskForModal.availability_slots.AM.status!=='free'||currentDeskForModal.availability_slots.PM.status!=='free'),children:\"\\u0417\\u0430\\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"})]})]})})})]});};export default BookingTab;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","fetchOffices","fetchDesks","bookDesk","UserContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BookingTab","currentUser","offices","setOffices","selectedOfficeId","setSelectedOfficeId","getMonday","date","d","Date","day","getDay","diff","getDate","setDate","getInitialSelectedDate","today","dayOfWeek","nextMonday","initialSelectedDate","initialWeekStart","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","desks","setDesks","showModal","setShowModal","currentDeskForModal","setCurrentDeskForModal","bookingTimeSlot","setBookingTimeSlot","isLoadingDesks","setIsLoadingDesks","errorDesks","setErrorDesks","bookingMessage","setBookingMessage","text","type","loadOffices","data","error","message","loadDesks","officeId","dateObj","handleOfficeChange","e","target","value","handleDayClick","handleWeekChange","direction","newWeekStartCandidate","newActualWeekStart","newSelectedDate","handleOpenModal","desk","display_name","telegram_first_name","setTimeout","availability_slots","AM","status","PM","handleBookDesk","deskId","id","bookingSuccessful","Error","name","getDeskCardClass","amStatus","pmStatus","renderDaySelector","days","setHours","i","isTodayDate","toDateString","isActive","push","className","onClick","children","toLocaleDateString","weekday","toUpperCase","weekEnd","htmlFor","onChange","map","office","month","role","length","style","cursor","office_name","user_display_name","tabIndex","backgroundColor","checked","disabled"],"sources":["C:/Users/A.Ryazanov/book/front/src/components/BookingTab.js"],"sourcesContent":["// src/components/BookingTab.js\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { fetchOffices, fetchDesks, bookDesk } from '../api';\nimport { UserContext } from '../App';\n\nconst BookingTab = () => {\n    const currentUser = useContext(UserContext);\n    const [offices, setOffices] = useState([]);\n    const [selectedOfficeId, setSelectedOfficeId] = useState('');\n\n    // --- ИСПРАВЛЕННЫЕ ФУНКЦИИ ДЛЯ РАБОТЫ С ДАТАМИ ---\n    const getMonday = (date) => {\n        const d = new Date(date);\n        const day = d.getDay(); // 0 (Вс) - 6 (Сб)\n        const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Коррекция для Вс (day === 0)\n        return new Date(d.setDate(diff));\n    };\n\n    const getInitialSelectedDate = () => {\n        const today = new Date();\n        const dayOfWeek = today.getDay(); // 0 (Вс) - 6 (Сб)\n\n        // Если сегодня Сб (6) или Вс (0), переносим selectedDate на следующий понедельник\n        if (dayOfWeek === 6) { // Суббота\n            const nextMonday = new Date(today);\n            nextMonday.setDate(today.getDate() + 2);\n            return getMonday(nextMonday); // Убедимся, что это понедельник\n        } else if (dayOfWeek === 0) { // Воскресенье\n            const nextMonday = new Date(today);\n            nextMonday.setDate(today.getDate() + 1);\n            return getMonday(nextMonday); // Убедимся, что это понедельник\n        }\n        // Для будних дней оставляем текущий день, но currentWeekStart будет понедельником этой недели\n        return today; \n    };\n    // --- КОНЕЦ ИСПРАВЛЕННЫХ ФУНКЦИЙ ---\n\n    // Инициализация состояний с использованием новых функций\n    const initialSelectedDate = getInitialSelectedDate();\n    const initialWeekStart = getMonday(initialSelectedDate); // Понедельник недели, к которой относится initialSelectedDate\n\n    const [selectedDate, setSelectedDate] = useState(initialSelectedDate);\n    const [currentWeekStart, setCurrentWeekStart] = useState(initialWeekStart);\n    // --- КОНЕЦ ИНИЦИАЛИЗАЦИИ ---\n    \n    const [desks, setDesks] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [currentDeskForModal, setCurrentDeskForModal] = useState(null);\n    const [bookingTimeSlot, setBookingTimeSlot] = useState('AM');\n    const [isLoadingDesks, setIsLoadingDesks] = useState(false);\n    const [errorDesks, setErrorDesks] = useState('');\n    const [bookingMessage, setBookingMessage] = useState({ text: '', type: '' });\n\n    const loadOffices = useCallback(async () => {\n        // ... (без изменений)\n        try {\n            const data = await fetchOffices();\n            setOffices(data);\n        } catch (error) {\n            setBookingMessage({ text: `Ошибка загрузки офисов: ${error.message}`, type: 'danger' });\n        }\n    }, []);\n\n    const loadDesks = useCallback(async (officeId, date) => {\n        // ... (без изменений)\n        if (!officeId) {\n            setDesks([]);\n            setErrorDesks('');\n            return;\n        }\n        setIsLoadingDesks(true);\n        setErrorDesks('');\n        try {\n            // Убедимся, что передаем объект Date\n            const dateObj = date instanceof Date ? date : new Date(date);\n            const data = await fetchDesks(officeId, dateObj);\n            setDesks(data);\n        } catch (error) {\n            setErrorDesks(error.message || 'Ошибка загрузки столов');\n            setDesks([]);\n        } finally {\n            setIsLoadingDesks(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        loadOffices();\n    }, [loadOffices]);\n\n    useEffect(() => {\n        if (selectedOfficeId && selectedDate) { // Добавил проверку selectedDate\n            loadDesks(selectedOfficeId, selectedDate);\n        } else {\n            setDesks([]);\n        }\n    }, [selectedOfficeId, selectedDate, loadDesks]);\n\n    const handleOfficeChange = (e) => setSelectedOfficeId(e.target.value);\n    \n    const handleDayClick = (date) => {\n        setSelectedDate(new Date(date)); // Убедимся, что это новый объект Date\n    };\n\n    const handleWeekChange = (direction) => {\n        const newWeekStartCandidate = new Date(currentWeekStart);\n        newWeekStartCandidate.setDate(newWeekStartCandidate.getDate() + (direction === 'next' ? 7 : -7));\n        \n        // Устанавливаем currentWeekStart на понедельник этой новой недели\n        const newActualWeekStart = getMonday(newWeekStartCandidate);\n        setCurrentWeekStart(newActualWeekStart);\n\n        // Устанавливаем selectedDate на первый рабочий день этой новой недели (понедельник)\n        // или на текущий день, если он попадает в новую неделю и является рабочим.\n        // Для простоты, всегда будем ставить на понедельник новой недели.\n        let newSelectedDate = new Date(newActualWeekStart);\n\n        // Если новая выбранная дата (понедельник) раньше сегодняшнего дня,\n        // и это не текущая неделя, то может быть, стоит выбрать сегодняшний день, если он в этой неделе.\n        // Но для консистентности, при переключении недель, всегда будем выбирать понедельник.\n        // Если нужно более сложное поведение (например, не давать выбирать прошедшие дни), это отдельная логика.\n        \n        // Пропускаем выходные, если вдруг newActualWeekStart оказался не понедельником (хотя getMonday должен это обеспечить)\n        // Эта логика уже не так нужна, если getMonday работает правильно.\n        // if (newSelectedDate.getDay() === 0) newSelectedDate.setDate(newSelectedDate.getDate() + 1);\n        // else if (newSelectedDate.getDay() === 6) newSelectedDate.setDate(newSelectedDate.getDate() + 2);\n        \n        setSelectedDate(newSelectedDate);\n    };\n\n    const handleOpenModal = (desk) => {\n        // ... (без изменений)\n        if (!currentUser || (!currentUser.display_name && !currentUser.telegram_first_name)) {\n            setBookingMessage({ text: 'Пожалуйста, сначала установите ваше имя в профиле (кнопка вверху).', type: 'warning' });\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 4000);\n            return;\n        }\n        setCurrentDeskForModal(desk);\n        if (desk.availability_slots.AM.status === 'free') setBookingTimeSlot('AM');\n        else if (desk.availability_slots.PM.status === 'free') setBookingTimeSlot('PM');\n        else setBookingTimeSlot('AM');\n        setShowModal(true);\n    };\n\n    const handleBookDesk = async () => {\n        // ... (без изменений)\n        if (!currentDeskForModal || !bookingTimeSlot) {\n            setBookingMessage({ text: 'Ошибка: Не выбран стол или время.', type: 'danger' });\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 3000);\n            return;\n        }\n        const deskId = currentDeskForModal.id;\n        let bookingSuccessful = true;\n        try {\n            if (bookingTimeSlot === 'FULL') {\n                if (currentDeskForModal.availability_slots.AM.status === 'free') {\n                    await bookDesk(deskId, selectedDate, 'AM');\n                } else { throw new Error('Утренний слот уже занят для бронирования на весь день.'); }\n                if (currentDeskForModal.availability_slots.PM.status === 'free') {\n                    await bookDesk(deskId, selectedDate, 'PM');\n                } else { throw new Error('Вечерний слот уже занят. Бронь на утро была сделана, но на вечер не удалась.');}\n                setBookingMessage({ text: `Стол ${currentDeskForModal.name || deskId} забронирован на весь день!`, type: 'success' });\n            } else {\n                await bookDesk(deskId, selectedDate, bookingTimeSlot);\n                setBookingMessage({ text: `Стол ${currentDeskForModal.name || deskId} забронирован на ${bookingTimeSlot === 'AM' ? 'утро' : 'вечер'}!`, type: 'success' });\n            }\n        } catch (error) {\n            bookingSuccessful = false;\n            setBookingMessage({ text: `Ошибка бронирования: ${error.message}`, type: 'danger' });\n        } finally {\n            if (bookingSuccessful) {\n                loadDesks(selectedOfficeId, selectedDate);\n                setShowModal(false);\n            }\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 5000);\n        }\n    };\n\n    const getDeskCardClass = (desk) => { /* ... без изменений ... */ \n        const amStatus = desk.availability_slots.AM.status;\n        const pmStatus = desk.availability_slots.PM.status;\n        if (amStatus === 'booked' && pmStatus === 'booked') return 'border-danger bg-danger-subtle';\n        if (amStatus === 'booked' || pmStatus === 'booked') return 'border-warning bg-warning-subtle';\n        return 'border-success bg-success-subtle';\n    };\n    \n    const renderDaySelector = () => { \n        const days = [];\n        const today = new Date();\n        today.setHours(0, 0, 0, 0); // Нормализуем today для сравнения только дат\n\n        for (let i = 0; i < 5; i++) { // Пн-Пт\n            const date = new Date(currentWeekStart);\n            date.setDate(date.getDate() + i);\n            date.setHours(0,0,0,0); // Нормализуем для сравнения\n\n            const isTodayDate = date.toDateString() === today.toDateString();\n            const isActive = date.toDateString() === selectedDate.toDateString();\n            \n            // Логика для отключения прошедших дней (опционально)\n            // const isPast = date < today;\n            // if (isPast && !isTodayDate) { // Не отображаем прошедшие дни, кроме сегодняшнего\n            //     // или делаем их disabled\n            // }\n\n            days.push(\n                <button\n                    key={i}\n                    className={`btn btn-sm flex-grow-1 ${isActive ? 'active btn-primary' : (isTodayDate ? 'btn-info' : 'btn-outline-secondary')}`}\n                    onClick={() => handleDayClick(date)}\n                    // disabled={isPast && !isTodayDate} // Пример отключения прошедших дней\n                >\n                    <div className=\"small\">{date.toLocaleDateString('ru-RU', { weekday: 'short' }).toUpperCase()}</div>\n                    <div className=\"fw-bold\">{date.getDate()}</div>\n                </button>\n            );\n        }\n        return <div className=\"d-flex justify-content-between gap-1\">{days}</div>;\n    };\n\n    const weekEnd = new Date(currentWeekStart);\n    weekEnd.setDate(currentWeekStart.getDate() + 4); // Пятница\n\n    return (\n        <>\n            {/* ... остальная JSX разметка без изменений ... */}\n            <div className=\"card mb-3\">\n                 <div className=\"card-body\">\n                    <div className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"office-select-booking\" className=\"form-label\">Офис:</label>\n                            <select id=\"office-select-booking\" className=\"form-select\" value={selectedOfficeId} onChange={handleOfficeChange}>\n                                <option value=\"\">-- Выберите офис --</option>\n                                {offices.map(office => (<option key={office.id} value={office.id}>{office.name}</option>))}\n                            </select>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\n                                <div id=\"current-week\" className=\"text-center fw-bold small\">\n                                    <button onClick={() => handleWeekChange('prev')} className=\"btn btn-outline-secondary btn-sm me-2\">←</button>\n                                    <span>\n                                        {currentWeekStart.toLocaleDateString('ru-RU', { day: 'numeric', month: 'short' })} – {weekEnd.toLocaleDateString('ru-RU', { day: 'numeric', month: 'short' })}\n                                    </span>\n                                    <button onClick={() => handleWeekChange('next')} className=\"btn btn-outline-secondary btn-sm ms-2\">→</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"gap-2 my-3\" id=\"day-selector\">{renderDaySelector()}</div>\n                </div>\n            </div>\n\n            {bookingMessage.text && (\n                <div className={`alert alert-${bookingMessage.type} alert-dismissible fade show`} role=\"alert\">\n                    {bookingMessage.text}\n                    <button type=\"button\" className=\"btn-close\" onClick={() => setBookingMessage({ text: '', type: '' })} aria-label=\"Close\"></button>\n                </div>\n            )}\n\n            {isLoadingDesks && <p>Загрузка столов...</p>}\n            {errorDesks && <div className=\"alert alert-danger\">{errorDesks} <button className=\"btn btn-link\" onClick={() => loadDesks(selectedOfficeId, selectedDate)}>Обновить</button></div>}\n             {!isLoadingDesks && !errorDesks && selectedOfficeId && desks.length === 0 && <p className=\"text-muted\">Нет доступных столов для выбранной даты или офис пуст.</p>}\n            {!isLoadingDesks && !errorDesks && !selectedOfficeId && <p className=\"text-muted\">Выберите офис для отображения столов.</p>}\n\n\n            <div className=\"row\" id=\"desk-container\">\n                {desks.map(desk => (\n                    <div key={desk.id} className=\"col-md-4 col-lg-3 mb-3\">\n                        <div\n                            className={`card h-100 ${getDeskCardClass(desk)}`}\n                            style={{ cursor: (desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free') ? 'pointer' : 'default' }}\n                            onClick={() => (desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free') ? handleOpenModal(desk) : null}\n                        >\n                            <div className=\"card-body d-flex flex-column align-items-center justify-content-center text-center p-2\">\n                                <h5 className=\"card-title mb-1 h6\">{desk.name || `Стол ${desk.id}`}</h5>\n                                <p className=\"text-muted small mb-1\">{desk.office_name}</p>\n                                <div className=\"mt-1\">\n                                    <span className={`badge rounded-pill text-bg-${desk.availability_slots.AM.status === 'free' ? 'success' : 'danger'} me-1`}>\n                                        Утро {desk.availability_slots.AM.status === 'booked' && desk.availability_slots.AM.user_display_name ? `(${desk.availability_slots.AM.user_display_name})` : ''}\n                                    </span>\n                                    <span className={`badge rounded-pill text-bg-${desk.availability_slots.PM.status === 'free' ? 'success' : 'danger'}`}>\n                                        Вечер {desk.availability_slots.PM.status === 'booked' && desk.availability_slots.PM.user_display_name ? `(${desk.availability_slots.PM.user_display_name})` : ''}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {showModal && currentDeskForModal && (\n                <div className=\"modal show d-block\" tabIndex=\"-1\" role=\"dialog\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">\n                                    Бронирование: {currentDeskForModal.name || `Стол ${currentDeskForModal.id}`}\n                                </h5>\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(false)}></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p className=\"mb-1\"><strong>Дата:</strong> {selectedDate.toLocaleDateString('ru-RU')}</p>\n                                <p><strong>Офис:</strong> {currentDeskForModal.office_name}</p>\n                                <div className=\"form-check mb-2\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-am\" value=\"AM\"\n                                        checked={bookingTimeSlot === 'AM'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.AM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${currentDeskForModal.availability_slots.AM.status !== 'free' ? 'text-muted' : ''}`} htmlFor=\"slot-am\">\n                                        Утро \n                                        {currentDeskForModal.availability_slots.AM.status === 'free' \n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-danger small\"> (Занято {currentDeskForModal.availability_slots.AM.user_display_name || ''})</span>\n                                        }\n                                    </label>\n                                </div>\n                                <div className=\"form-check mb-2\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-pm\" value=\"PM\"\n                                        checked={bookingTimeSlot === 'PM'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.PM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${currentDeskForModal.availability_slots.PM.status !== 'free' ? 'text-muted' : ''}`} htmlFor=\"slot-pm\">\n                                        Вечер \n                                        {currentDeskForModal.availability_slots.PM.status === 'free' \n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-danger small\"> (Занято {currentDeskForModal.availability_slots.PM.user_display_name || ''})</span>\n                                        }\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-full\" value=\"FULL\"\n                                        checked={bookingTimeSlot === 'FULL'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${(currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free') ? 'text-muted' : ''}`} htmlFor=\"slot-full\">\n                                        Весь день\n                                        {(currentDeskForModal.availability_slots.AM.status === 'free' && currentDeskForModal.availability_slots.PM.status === 'free')\n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-warning small\"> (Занято частично или полностью)</span>\n                                        }\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowModal(false)}>Закрыть</button>\n                                <button\n                                    type=\"button\" className=\"btn btn-primary\" onClick={handleBookDesk}\n                                    disabled={ \n                                        !bookingTimeSlot || \n                                        (bookingTimeSlot === 'AM' && currentDeskForModal.availability_slots.AM.status !== 'free') ||\n                                        (bookingTimeSlot === 'PM' && currentDeskForModal.availability_slots.PM.status !== 'free') ||\n                                        (bookingTimeSlot === 'FULL' && (currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'))\n                                    }\n                                >\n                                    Забронировать\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default BookingTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}