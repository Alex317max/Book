{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A.Ryazanov\\\\book_test\\\\front\\\\src\\\\components\\\\BookingTab.js\",\n  _s = $RefreshSig$();\n// src/components/BookingTab.js\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { fetchOffices, fetchDesks, bookDesk } from '../api';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingTab = () => {\n  _s();\n  const currentUser = useContext(UserContext);\n  const [offices, setOffices] = useState([]);\n  const [selectedOfficeId, setSelectedOfficeId] = useState('');\n\n  // --- ИСПРАВЛЕННЫЕ ФУНКЦИИ ДЛЯ РАБОТЫ С ДАТАМИ ---\n  const getMonday = date => {\n    const d = new Date(date);\n    const day = d.getDay(); // 0 (Вс) - 6 (Сб)\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Коррекция для Вс (day === 0)\n    return new Date(d.setDate(diff));\n  };\n  const getInitialSelectedDate = () => {\n    const today = new Date();\n    const dayOfWeek = today.getDay(); // 0 (Вс) - 6 (Сб)\n\n    // Если сегодня Сб (6) или Вс (0), переносим selectedDate на следующий понедельник\n    if (dayOfWeek === 6) {\n      // Суббота\n      const nextMonday = new Date(today);\n      nextMonday.setDate(today.getDate() + 2);\n      return getMonday(nextMonday); // Убедимся, что это понедельник\n    } else if (dayOfWeek === 0) {\n      // Воскресенье\n      const nextMonday = new Date(today);\n      nextMonday.setDate(today.getDate() + 1);\n      return getMonday(nextMonday); // Убедимся, что это понедельник\n    }\n    // Для будних дней оставляем текущий день, но currentWeekStart будет понедельником этой недели\n    return today;\n  };\n  // --- КОНЕЦ ИСПРАВЛЕННЫХ ФУНКЦИЙ ---\n\n  // Инициализация состояний с использованием новых функций\n  const initialSelectedDate = getInitialSelectedDate();\n  const initialWeekStart = getMonday(initialSelectedDate); // Понедельник недели, к которой относится initialSelectedDate\n\n  const [selectedDate, setSelectedDate] = useState(initialSelectedDate);\n  const [currentWeekStart, setCurrentWeekStart] = useState(initialWeekStart);\n  // --- КОНЕЦ ИНИЦИАЛИЗАЦИИ ---\n\n  const [desks, setDesks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentDeskForModal, setCurrentDeskForModal] = useState(null);\n  const [bookingTimeSlot, setBookingTimeSlot] = useState('AM');\n  const [isLoadingDesks, setIsLoadingDesks] = useState(false);\n  const [errorDesks, setErrorDesks] = useState('');\n  const [bookingMessage, setBookingMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const loadOffices = useCallback(async () => {\n    // ... (без изменений)\n    try {\n      const data = await fetchOffices();\n      setOffices(data);\n    } catch (error) {\n      setBookingMessage({\n        text: `Ошибка загрузки офисов: ${error.message}`,\n        type: 'danger'\n      });\n    }\n  }, []);\n  const loadDesks = useCallback(async (officeId, date) => {\n    // ... (без изменений)\n    if (!officeId) {\n      setDesks([]);\n      setErrorDesks('');\n      return;\n    }\n    setIsLoadingDesks(true);\n    setErrorDesks('');\n    try {\n      // Убедимся, что передаем объект Date\n      const dateObj = date instanceof Date ? date : new Date(date);\n      const data = await fetchDesks(officeId, dateObj);\n      setDesks(data);\n    } catch (error) {\n      setErrorDesks(error.message || 'Ошибка загрузки столов');\n      setDesks([]);\n    } finally {\n      setIsLoadingDesks(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadOffices();\n  }, [loadOffices]);\n  useEffect(() => {\n    if (selectedOfficeId && selectedDate) {\n      // Добавил проверку selectedDate\n      loadDesks(selectedOfficeId, selectedDate);\n    } else {\n      setDesks([]);\n    }\n  }, [selectedOfficeId, selectedDate, loadDesks]);\n  const handleOfficeChange = e => setSelectedOfficeId(e.target.value);\n  const handleDayClick = date => {\n    setSelectedDate(new Date(date)); // Убедимся, что это новый объект Date\n  };\n  const handleWeekChange = direction => {\n    const newWeekStartCandidate = new Date(currentWeekStart);\n    newWeekStartCandidate.setDate(newWeekStartCandidate.getDate() + (direction === 'next' ? 7 : -7));\n\n    // Устанавливаем currentWeekStart на понедельник этой новой недели\n    const newActualWeekStart = getMonday(newWeekStartCandidate);\n    setCurrentWeekStart(newActualWeekStart);\n\n    // Устанавливаем selectedDate на первый рабочий день этой новой недели (понедельник)\n    // или на текущий день, если он попадает в новую неделю и является рабочим.\n    // Для простоты, всегда будем ставить на понедельник новой недели.\n    let newSelectedDate = new Date(newActualWeekStart);\n\n    // Если новая выбранная дата (понедельник) раньше сегодняшнего дня,\n    // и это не текущая неделя, то может быть, стоит выбрать сегодняшний день, если он в этой неделе.\n    // Но для консистентности, при переключении недель, всегда будем выбирать понедельник.\n    // Если нужно более сложное поведение (например, не давать выбирать прошедшие дни), это отдельная логика.\n\n    // Пропускаем выходные, если вдруг newActualWeekStart оказался не понедельником (хотя getMonday должен это обеспечить)\n    // Эта логика уже не так нужна, если getMonday работает правильно.\n    // if (newSelectedDate.getDay() === 0) newSelectedDate.setDate(newSelectedDate.getDate() + 1);\n    // else if (newSelectedDate.getDay() === 6) newSelectedDate.setDate(newSelectedDate.getDate() + 2);\n\n    setSelectedDate(newSelectedDate);\n  };\n  const handleOpenModal = desk => {\n    // ... (без изменений)\n    if (!currentUser || !currentUser.display_name && !currentUser.telegram_first_name) {\n      setBookingMessage({\n        text: 'Пожалуйста, сначала установите ваше имя в профиле (кнопка вверху).',\n        type: 'warning'\n      });\n      setTimeout(() => setBookingMessage({\n        text: '',\n        type: ''\n      }), 4000);\n      return;\n    }\n    setCurrentDeskForModal(desk);\n    if (desk.availability_slots.AM.status === 'free') setBookingTimeSlot('AM');else if (desk.availability_slots.PM.status === 'free') setBookingTimeSlot('PM');else setBookingTimeSlot('AM');\n    setShowModal(true);\n  };\n  const handleBookDesk = async () => {\n    // ... (без изменений)\n    if (!currentDeskForModal || !bookingTimeSlot) {\n      setBookingMessage({\n        text: 'Ошибка: Не выбран стол или время.',\n        type: 'danger'\n      });\n      setTimeout(() => setBookingMessage({\n        text: '',\n        type: ''\n      }), 3000);\n      return;\n    }\n    const deskId = currentDeskForModal.id;\n    let bookingSuccessful = true;\n    try {\n      if (bookingTimeSlot === 'FULL') {\n        if (currentDeskForModal.availability_slots.AM.status === 'free') {\n          await bookDesk(deskId, selectedDate, 'AM');\n        } else {\n          throw new Error('Утренний слот уже занят для бронирования на весь день.');\n        }\n        if (currentDeskForModal.availability_slots.PM.status === 'free') {\n          await bookDesk(deskId, selectedDate, 'PM');\n        } else {\n          throw new Error('Вечерний слот уже занят. Бронь на утро была сделана, но на вечер не удалась.');\n        }\n        setBookingMessage({\n          text: `Стол ${currentDeskForModal.name || deskId} забронирован на весь день!`,\n          type: 'success'\n        });\n      } else {\n        await bookDesk(deskId, selectedDate, bookingTimeSlot);\n        setBookingMessage({\n          text: `Стол ${currentDeskForModal.name || deskId} забронирован на ${bookingTimeSlot === 'AM' ? 'утро' : 'вечер'}!`,\n          type: 'success'\n        });\n      }\n    } catch (error) {\n      bookingSuccessful = false;\n      setBookingMessage({\n        text: `Ошибка бронирования: ${error.message}`,\n        type: 'danger'\n      });\n    } finally {\n      if (bookingSuccessful) {\n        loadDesks(selectedOfficeId, selectedDate);\n        setShowModal(false);\n      }\n      setTimeout(() => setBookingMessage({\n        text: '',\n        type: ''\n      }), 5000);\n    }\n  };\n  const getDeskCardClass = desk => {\n    /* ... без изменений ... */\n    const amStatus = desk.availability_slots.AM.status;\n    const pmStatus = desk.availability_slots.PM.status;\n    if (amStatus === 'booked' && pmStatus === 'booked') return 'border-danger bg-danger-subtle';\n    if (amStatus === 'booked' || pmStatus === 'booked') return 'border-warning bg-warning-subtle';\n    return 'border-success bg-success-subtle';\n  };\n  const renderDaySelector = () => {\n    const days = [];\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Нормализуем today для сравнения только дат\n\n    for (let i = 0; i < 5; i++) {\n      // Пн-Пт\n      const date = new Date(currentWeekStart);\n      date.setDate(date.getDate() + i);\n      date.setHours(0, 0, 0, 0); // Нормализуем для сравнения\n\n      const isTodayDate = date.toDateString() === today.toDateString();\n      const isActive = date.toDateString() === selectedDate.toDateString();\n\n      // Логика для отключения прошедших дней (опционально)\n      // const isPast = date < today;\n      // if (isPast && !isTodayDate) { // Не отображаем прошедшие дни, кроме сегодняшнего\n      //     // или делаем их disabled\n      // }\n\n      days.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-sm flex-grow-1 ${isActive ? 'active btn-primary' : isTodayDate ? 'btn-info' : 'btn-outline-secondary'}`,\n        onClick: () => handleDayClick(date)\n        // disabled={isPast && !isTodayDate} // Пример отключения прошедших дней\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small\",\n          children: date.toLocaleDateString('ru-RU', {\n            weekday: 'short'\n          }).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fw-bold\",\n          children: date.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between gap-1\",\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 16\n    }, this);\n  };\n  const weekEnd = new Date(currentWeekStart);\n  weekEnd.setDate(currentWeekStart.getDate() + 4); // Пятница\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"office-select-booking\",\n              className: \"form-label\",\n              children: \"\\u041E\\u0444\\u0438\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"office-select-booking\",\n              className: \"form-select\",\n              value: selectedOfficeId,\n              onChange: handleOfficeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0444\\u0438\\u0441 --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), offices.map(office => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: office.id,\n                children: office.name\n              }, office.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 57\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column align-items-center justify-content-center h-100\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"current-week\",\n                className: \"text-center fw-bold small\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleWeekChange('prev'),\n                  className: \"btn btn-outline-secondary btn-sm me-2\",\n                  children: \"\\u2190\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [currentWeekStart.toLocaleDateString('ru-RU', {\n                    day: 'numeric',\n                    month: 'short'\n                  }), \" \\u2013 \", weekEnd.toLocaleDateString('ru-RU', {\n                    day: 'numeric',\n                    month: 'short'\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleWeekChange('next'),\n                  className: \"btn btn-outline-secondary btn-sm ms-2\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-2 my-3\",\n          id: \"day-selector\",\n          children: renderDaySelector()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), bookingMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${bookingMessage.type} alert-dismissible fade show`,\n      role: \"alert\",\n      children: [bookingMessage.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setBookingMessage({\n          text: '',\n          type: ''\n        }),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this), isLoadingDesks && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 32\n    }, this), errorDesks && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [errorDesks, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: () => loadDesks(selectedOfficeId, selectedDate),\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 77\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 28\n    }, this), !isLoadingDesks && !errorDesks && selectedOfficeId && desks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0439 \\u0434\\u0430\\u0442\\u044B \\u0438\\u043B\\u0438 \\u043E\\u0444\\u0438\\u0441 \\u043F\\u0443\\u0441\\u0442.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 91\n    }, this), !isLoadingDesks && !errorDesks && !selectedOfficeId && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0444\\u0438\\u0441 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0441\\u0442\\u043E\\u043B\\u043E\\u0432.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      id: \"desk-container\",\n      children: desks.map(desk => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-lg-3 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card h-100 ${getDeskCardClass(desk)}`,\n          style: {\n            cursor: desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free' ? 'pointer' : 'default'\n          },\n          onClick: () => desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free' ? handleOpenModal(desk) : null,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body d-flex flex-column align-items-center justify-content-center text-center p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title mb-1 h6\",\n              children: desk.name || `Стол ${desk.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted small mb-1\",\n              children: desk.office_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge rounded-pill text-bg-${desk.availability_slots.AM.status === 'free' ? 'success' : 'danger'} me-1`,\n                children: [\"\\u0423\\u0442\\u0440\\u043E \", desk.availability_slots.AM.status === 'booked' && desk.availability_slots.AM.user_display_name ? `(${desk.availability_slots.AM.user_display_name})` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge rounded-pill text-bg-${desk.availability_slots.PM.status === 'free' ? 'success' : 'danger'}`,\n                children: [\"\\u0412\\u0435\\u0447\\u0435\\u0440 \", desk.availability_slots.PM.status === 'booked' && desk.availability_slots.PM.user_display_name ? `(${desk.availability_slots.PM.user_display_name})` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)\n      }, desk.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), showModal && currentDeskForModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal show d-block\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      style: {\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\u0411\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435: \", currentDeskForModal.name || `Стол ${currentDeskForModal.id}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setShowModal(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 53\n              }, this), \" \", selectedDate.toLocaleDateString('ru-RU')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u041E\\u0444\\u0438\\u0441:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 36\n              }, this), \" \", currentDeskForModal.office_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"time-slot\",\n                id: \"slot-am\",\n                value: \"AM\",\n                checked: bookingTimeSlot === 'AM',\n                onChange: e => setBookingTimeSlot(e.target.value),\n                disabled: currentDeskForModal.availability_slots.AM.status !== 'free'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: `form-check-label d-block ${currentDeskForModal.availability_slots.AM.status !== 'free' ? 'text-muted' : ''}`,\n                htmlFor: \"slot-am\",\n                children: [\"\\u0423\\u0442\\u0440\\u043E\", currentDeskForModal.availability_slots.AM.status === 'free' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-success small\",\n                  children: \" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 47\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger small\",\n                  children: [\" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \", currentDeskForModal.availability_slots.AM.user_display_name || '', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"time-slot\",\n                id: \"slot-pm\",\n                value: \"PM\",\n                checked: bookingTimeSlot === 'PM',\n                onChange: e => setBookingTimeSlot(e.target.value),\n                disabled: currentDeskForModal.availability_slots.PM.status !== 'free'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: `form-check-label d-block ${currentDeskForModal.availability_slots.PM.status !== 'free' ? 'text-muted' : ''}`,\n                htmlFor: \"slot-pm\",\n                children: [\"\\u0412\\u0435\\u0447\\u0435\\u0440\", currentDeskForModal.availability_slots.PM.status === 'free' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-success small\",\n                  children: \" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 47\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger small\",\n                  children: [\" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \", currentDeskForModal.availability_slots.PM.user_display_name || '', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"time-slot\",\n                id: \"slot-full\",\n                value: \"FULL\",\n                checked: bookingTimeSlot === 'FULL',\n                onChange: e => setBookingTimeSlot(e.target.value),\n                disabled: currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: `form-check-label d-block ${currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free' ? 'text-muted' : ''}`,\n                htmlFor: \"slot-full\",\n                children: [\"\\u0412\\u0435\\u0441\\u044C \\u0434\\u0435\\u043D\\u044C\", currentDeskForModal.availability_slots.AM.status === 'free' && currentDeskForModal.availability_slots.PM.status === 'free' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-success small\",\n                  children: \" (\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 47\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-warning small\",\n                  children: \" (\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E \\u0447\\u0430\\u0441\\u0442\\u0438\\u0447\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043F\\u043E\\u043B\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: () => setShowModal(false),\n              children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleBookDesk,\n              disabled: !bookingTimeSlot || bookingTimeSlot === 'AM' && currentDeskForModal.availability_slots.AM.status !== 'free' || bookingTimeSlot === 'PM' && currentDeskForModal.availability_slots.PM.status !== 'free' || bookingTimeSlot === 'FULL' && (currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'),\n              children: \"\\u0417\\u0430\\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(BookingTab, \"leT1DabCuakGRg5mn8Z4FtTiG+Q=\");\n_c = BookingTab;\nexport default BookingTab;\nvar _c;\n$RefreshReg$(_c, \"BookingTab\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","fetchOffices","fetchDesks","bookDesk","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingTab","_s","currentUser","offices","setOffices","selectedOfficeId","setSelectedOfficeId","getMonday","date","d","Date","day","getDay","diff","getDate","setDate","getInitialSelectedDate","today","dayOfWeek","nextMonday","initialSelectedDate","initialWeekStart","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","desks","setDesks","showModal","setShowModal","currentDeskForModal","setCurrentDeskForModal","bookingTimeSlot","setBookingTimeSlot","isLoadingDesks","setIsLoadingDesks","errorDesks","setErrorDesks","bookingMessage","setBookingMessage","text","type","loadOffices","data","error","message","loadDesks","officeId","dateObj","handleOfficeChange","e","target","value","handleDayClick","handleWeekChange","direction","newWeekStartCandidate","newActualWeekStart","newSelectedDate","handleOpenModal","desk","display_name","telegram_first_name","setTimeout","availability_slots","AM","status","PM","handleBookDesk","deskId","id","bookingSuccessful","Error","name","getDeskCardClass","amStatus","pmStatus","renderDaySelector","days","setHours","i","isTodayDate","toDateString","isActive","push","className","onClick","children","toLocaleDateString","weekday","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","weekEnd","htmlFor","onChange","map","office","month","role","length","style","cursor","office_name","user_display_name","tabIndex","backgroundColor","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/A.Ryazanov/book_test/front/src/components/BookingTab.js"],"sourcesContent":["// src/components/BookingTab.js\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { fetchOffices, fetchDesks, bookDesk } from '../api';\nimport { UserContext } from '../App';\n\nconst BookingTab = () => {\n    const currentUser = useContext(UserContext);\n    const [offices, setOffices] = useState([]);\n    const [selectedOfficeId, setSelectedOfficeId] = useState('');\n\n    // --- ИСПРАВЛЕННЫЕ ФУНКЦИИ ДЛЯ РАБОТЫ С ДАТАМИ ---\n    const getMonday = (date) => {\n        const d = new Date(date);\n        const day = d.getDay(); // 0 (Вс) - 6 (Сб)\n        const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Коррекция для Вс (day === 0)\n        return new Date(d.setDate(diff));\n    };\n\n    const getInitialSelectedDate = () => {\n        const today = new Date();\n        const dayOfWeek = today.getDay(); // 0 (Вс) - 6 (Сб)\n\n        // Если сегодня Сб (6) или Вс (0), переносим selectedDate на следующий понедельник\n        if (dayOfWeek === 6) { // Суббота\n            const nextMonday = new Date(today);\n            nextMonday.setDate(today.getDate() + 2);\n            return getMonday(nextMonday); // Убедимся, что это понедельник\n        } else if (dayOfWeek === 0) { // Воскресенье\n            const nextMonday = new Date(today);\n            nextMonday.setDate(today.getDate() + 1);\n            return getMonday(nextMonday); // Убедимся, что это понедельник\n        }\n        // Для будних дней оставляем текущий день, но currentWeekStart будет понедельником этой недели\n        return today; \n    };\n    // --- КОНЕЦ ИСПРАВЛЕННЫХ ФУНКЦИЙ ---\n\n    // Инициализация состояний с использованием новых функций\n    const initialSelectedDate = getInitialSelectedDate();\n    const initialWeekStart = getMonday(initialSelectedDate); // Понедельник недели, к которой относится initialSelectedDate\n\n    const [selectedDate, setSelectedDate] = useState(initialSelectedDate);\n    const [currentWeekStart, setCurrentWeekStart] = useState(initialWeekStart);\n    // --- КОНЕЦ ИНИЦИАЛИЗАЦИИ ---\n    \n    const [desks, setDesks] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [currentDeskForModal, setCurrentDeskForModal] = useState(null);\n    const [bookingTimeSlot, setBookingTimeSlot] = useState('AM');\n    const [isLoadingDesks, setIsLoadingDesks] = useState(false);\n    const [errorDesks, setErrorDesks] = useState('');\n    const [bookingMessage, setBookingMessage] = useState({ text: '', type: '' });\n\n    const loadOffices = useCallback(async () => {\n        // ... (без изменений)\n        try {\n            const data = await fetchOffices();\n            setOffices(data);\n        } catch (error) {\n            setBookingMessage({ text: `Ошибка загрузки офисов: ${error.message}`, type: 'danger' });\n        }\n    }, []);\n\n    const loadDesks = useCallback(async (officeId, date) => {\n        // ... (без изменений)\n        if (!officeId) {\n            setDesks([]);\n            setErrorDesks('');\n            return;\n        }\n        setIsLoadingDesks(true);\n        setErrorDesks('');\n        try {\n            // Убедимся, что передаем объект Date\n            const dateObj = date instanceof Date ? date : new Date(date);\n            const data = await fetchDesks(officeId, dateObj);\n            setDesks(data);\n        } catch (error) {\n            setErrorDesks(error.message || 'Ошибка загрузки столов');\n            setDesks([]);\n        } finally {\n            setIsLoadingDesks(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        loadOffices();\n    }, [loadOffices]);\n\n    useEffect(() => {\n        if (selectedOfficeId && selectedDate) { // Добавил проверку selectedDate\n            loadDesks(selectedOfficeId, selectedDate);\n        } else {\n            setDesks([]);\n        }\n    }, [selectedOfficeId, selectedDate, loadDesks]);\n\n    const handleOfficeChange = (e) => setSelectedOfficeId(e.target.value);\n    \n    const handleDayClick = (date) => {\n        setSelectedDate(new Date(date)); // Убедимся, что это новый объект Date\n    };\n\n    const handleWeekChange = (direction) => {\n        const newWeekStartCandidate = new Date(currentWeekStart);\n        newWeekStartCandidate.setDate(newWeekStartCandidate.getDate() + (direction === 'next' ? 7 : -7));\n        \n        // Устанавливаем currentWeekStart на понедельник этой новой недели\n        const newActualWeekStart = getMonday(newWeekStartCandidate);\n        setCurrentWeekStart(newActualWeekStart);\n\n        // Устанавливаем selectedDate на первый рабочий день этой новой недели (понедельник)\n        // или на текущий день, если он попадает в новую неделю и является рабочим.\n        // Для простоты, всегда будем ставить на понедельник новой недели.\n        let newSelectedDate = new Date(newActualWeekStart);\n\n        // Если новая выбранная дата (понедельник) раньше сегодняшнего дня,\n        // и это не текущая неделя, то может быть, стоит выбрать сегодняшний день, если он в этой неделе.\n        // Но для консистентности, при переключении недель, всегда будем выбирать понедельник.\n        // Если нужно более сложное поведение (например, не давать выбирать прошедшие дни), это отдельная логика.\n        \n        // Пропускаем выходные, если вдруг newActualWeekStart оказался не понедельником (хотя getMonday должен это обеспечить)\n        // Эта логика уже не так нужна, если getMonday работает правильно.\n        // if (newSelectedDate.getDay() === 0) newSelectedDate.setDate(newSelectedDate.getDate() + 1);\n        // else if (newSelectedDate.getDay() === 6) newSelectedDate.setDate(newSelectedDate.getDate() + 2);\n        \n        setSelectedDate(newSelectedDate);\n    };\n\n    const handleOpenModal = (desk) => {\n        // ... (без изменений)\n        if (!currentUser || (!currentUser.display_name && !currentUser.telegram_first_name)) {\n            setBookingMessage({ text: 'Пожалуйста, сначала установите ваше имя в профиле (кнопка вверху).', type: 'warning' });\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 4000);\n            return;\n        }\n        setCurrentDeskForModal(desk);\n        if (desk.availability_slots.AM.status === 'free') setBookingTimeSlot('AM');\n        else if (desk.availability_slots.PM.status === 'free') setBookingTimeSlot('PM');\n        else setBookingTimeSlot('AM');\n        setShowModal(true);\n    };\n\n    const handleBookDesk = async () => {\n        // ... (без изменений)\n        if (!currentDeskForModal || !bookingTimeSlot) {\n            setBookingMessage({ text: 'Ошибка: Не выбран стол или время.', type: 'danger' });\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 3000);\n            return;\n        }\n        const deskId = currentDeskForModal.id;\n        let bookingSuccessful = true;\n        try {\n            if (bookingTimeSlot === 'FULL') {\n                if (currentDeskForModal.availability_slots.AM.status === 'free') {\n                    await bookDesk(deskId, selectedDate, 'AM');\n                } else { throw new Error('Утренний слот уже занят для бронирования на весь день.'); }\n                if (currentDeskForModal.availability_slots.PM.status === 'free') {\n                    await bookDesk(deskId, selectedDate, 'PM');\n                } else { throw new Error('Вечерний слот уже занят. Бронь на утро была сделана, но на вечер не удалась.');}\n                setBookingMessage({ text: `Стол ${currentDeskForModal.name || deskId} забронирован на весь день!`, type: 'success' });\n            } else {\n                await bookDesk(deskId, selectedDate, bookingTimeSlot);\n                setBookingMessage({ text: `Стол ${currentDeskForModal.name || deskId} забронирован на ${bookingTimeSlot === 'AM' ? 'утро' : 'вечер'}!`, type: 'success' });\n            }\n        } catch (error) {\n            bookingSuccessful = false;\n            setBookingMessage({ text: `Ошибка бронирования: ${error.message}`, type: 'danger' });\n        } finally {\n            if (bookingSuccessful) {\n                loadDesks(selectedOfficeId, selectedDate);\n                setShowModal(false);\n            }\n            setTimeout(() => setBookingMessage({ text: '', type: '' }), 5000);\n        }\n    };\n\n    const getDeskCardClass = (desk) => { /* ... без изменений ... */ \n        const amStatus = desk.availability_slots.AM.status;\n        const pmStatus = desk.availability_slots.PM.status;\n        if (amStatus === 'booked' && pmStatus === 'booked') return 'border-danger bg-danger-subtle';\n        if (amStatus === 'booked' || pmStatus === 'booked') return 'border-warning bg-warning-subtle';\n        return 'border-success bg-success-subtle';\n    };\n    \n    const renderDaySelector = () => { \n        const days = [];\n        const today = new Date();\n        today.setHours(0, 0, 0, 0); // Нормализуем today для сравнения только дат\n\n        for (let i = 0; i < 5; i++) { // Пн-Пт\n            const date = new Date(currentWeekStart);\n            date.setDate(date.getDate() + i);\n            date.setHours(0,0,0,0); // Нормализуем для сравнения\n\n            const isTodayDate = date.toDateString() === today.toDateString();\n            const isActive = date.toDateString() === selectedDate.toDateString();\n            \n            // Логика для отключения прошедших дней (опционально)\n            // const isPast = date < today;\n            // if (isPast && !isTodayDate) { // Не отображаем прошедшие дни, кроме сегодняшнего\n            //     // или делаем их disabled\n            // }\n\n            days.push(\n                <button\n                    key={i}\n                    className={`btn btn-sm flex-grow-1 ${isActive ? 'active btn-primary' : (isTodayDate ? 'btn-info' : 'btn-outline-secondary')}`}\n                    onClick={() => handleDayClick(date)}\n                    // disabled={isPast && !isTodayDate} // Пример отключения прошедших дней\n                >\n                    <div className=\"small\">{date.toLocaleDateString('ru-RU', { weekday: 'short' }).toUpperCase()}</div>\n                    <div className=\"fw-bold\">{date.getDate()}</div>\n                </button>\n            );\n        }\n        return <div className=\"d-flex justify-content-between gap-1\">{days}</div>;\n    };\n\n    const weekEnd = new Date(currentWeekStart);\n    weekEnd.setDate(currentWeekStart.getDate() + 4); // Пятница\n\n    return (\n        <>\n            {/* ... остальная JSX разметка без изменений ... */}\n            <div className=\"card mb-3\">\n                 <div className=\"card-body\">\n                    <div className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"office-select-booking\" className=\"form-label\">Офис:</label>\n                            <select id=\"office-select-booking\" className=\"form-select\" value={selectedOfficeId} onChange={handleOfficeChange}>\n                                <option value=\"\">-- Выберите офис --</option>\n                                {offices.map(office => (<option key={office.id} value={office.id}>{office.name}</option>))}\n                            </select>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\n                                <div id=\"current-week\" className=\"text-center fw-bold small\">\n                                    <button onClick={() => handleWeekChange('prev')} className=\"btn btn-outline-secondary btn-sm me-2\">←</button>\n                                    <span>\n                                        {currentWeekStart.toLocaleDateString('ru-RU', { day: 'numeric', month: 'short' })} – {weekEnd.toLocaleDateString('ru-RU', { day: 'numeric', month: 'short' })}\n                                    </span>\n                                    <button onClick={() => handleWeekChange('next')} className=\"btn btn-outline-secondary btn-sm ms-2\">→</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"gap-2 my-3\" id=\"day-selector\">{renderDaySelector()}</div>\n                </div>\n            </div>\n\n            {bookingMessage.text && (\n                <div className={`alert alert-${bookingMessage.type} alert-dismissible fade show`} role=\"alert\">\n                    {bookingMessage.text}\n                    <button type=\"button\" className=\"btn-close\" onClick={() => setBookingMessage({ text: '', type: '' })} aria-label=\"Close\"></button>\n                </div>\n            )}\n\n            {isLoadingDesks && <p>Загрузка столов...</p>}\n            {errorDesks && <div className=\"alert alert-danger\">{errorDesks} <button className=\"btn btn-link\" onClick={() => loadDesks(selectedOfficeId, selectedDate)}>Обновить</button></div>}\n             {!isLoadingDesks && !errorDesks && selectedOfficeId && desks.length === 0 && <p className=\"text-muted\">Нет доступных столов для выбранной даты или офис пуст.</p>}\n            {!isLoadingDesks && !errorDesks && !selectedOfficeId && <p className=\"text-muted\">Выберите офис для отображения столов.</p>}\n\n\n            <div className=\"row\" id=\"desk-container\">\n                {desks.map(desk => (\n                    <div key={desk.id} className=\"col-md-4 col-lg-3 mb-3\">\n                        <div\n                            className={`card h-100 ${getDeskCardClass(desk)}`}\n                            style={{ cursor: (desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free') ? 'pointer' : 'default' }}\n                            onClick={() => (desk.availability_slots.AM.status === 'free' || desk.availability_slots.PM.status === 'free') ? handleOpenModal(desk) : null}\n                        >\n                            <div className=\"card-body d-flex flex-column align-items-center justify-content-center text-center p-2\">\n                                <h5 className=\"card-title mb-1 h6\">{desk.name || `Стол ${desk.id}`}</h5>\n                                <p className=\"text-muted small mb-1\">{desk.office_name}</p>\n                                <div className=\"mt-1\">\n                                    <span className={`badge rounded-pill text-bg-${desk.availability_slots.AM.status === 'free' ? 'success' : 'danger'} me-1`}>\n                                        Утро {desk.availability_slots.AM.status === 'booked' && desk.availability_slots.AM.user_display_name ? `(${desk.availability_slots.AM.user_display_name})` : ''}\n                                    </span>\n                                    <span className={`badge rounded-pill text-bg-${desk.availability_slots.PM.status === 'free' ? 'success' : 'danger'}`}>\n                                        Вечер {desk.availability_slots.PM.status === 'booked' && desk.availability_slots.PM.user_display_name ? `(${desk.availability_slots.PM.user_display_name})` : ''}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {showModal && currentDeskForModal && (\n                <div className=\"modal show d-block\" tabIndex=\"-1\" role=\"dialog\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">\n                                    Бронирование: {currentDeskForModal.name || `Стол ${currentDeskForModal.id}`}\n                                </h5>\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(false)}></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p className=\"mb-1\"><strong>Дата:</strong> {selectedDate.toLocaleDateString('ru-RU')}</p>\n                                <p><strong>Офис:</strong> {currentDeskForModal.office_name}</p>\n                                <div className=\"form-check mb-2\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-am\" value=\"AM\"\n                                        checked={bookingTimeSlot === 'AM'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.AM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${currentDeskForModal.availability_slots.AM.status !== 'free' ? 'text-muted' : ''}`} htmlFor=\"slot-am\">\n                                        Утро \n                                        {currentDeskForModal.availability_slots.AM.status === 'free' \n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-danger small\"> (Занято {currentDeskForModal.availability_slots.AM.user_display_name || ''})</span>\n                                        }\n                                    </label>\n                                </div>\n                                <div className=\"form-check mb-2\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-pm\" value=\"PM\"\n                                        checked={bookingTimeSlot === 'PM'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.PM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${currentDeskForModal.availability_slots.PM.status !== 'free' ? 'text-muted' : ''}`} htmlFor=\"slot-pm\">\n                                        Вечер \n                                        {currentDeskForModal.availability_slots.PM.status === 'free' \n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-danger small\"> (Занято {currentDeskForModal.availability_slots.PM.user_display_name || ''})</span>\n                                        }\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input\n                                        className=\"form-check-input\" type=\"radio\" name=\"time-slot\" id=\"slot-full\" value=\"FULL\"\n                                        checked={bookingTimeSlot === 'FULL'}\n                                        onChange={(e) => setBookingTimeSlot(e.target.value)}\n                                        disabled={currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'}\n                                    />\n                                    <label className={`form-check-label d-block ${(currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free') ? 'text-muted' : ''}`} htmlFor=\"slot-full\">\n                                        Весь день\n                                        {(currentDeskForModal.availability_slots.AM.status === 'free' && currentDeskForModal.availability_slots.PM.status === 'free')\n                                            ? <span className=\"text-success small\"> (Свободно)</span>\n                                            : <span className=\"text-warning small\"> (Занято частично или полностью)</span>\n                                        }\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowModal(false)}>Закрыть</button>\n                                <button\n                                    type=\"button\" className=\"btn btn-primary\" onClick={handleBookDesk}\n                                    disabled={ \n                                        !bookingTimeSlot || \n                                        (bookingTimeSlot === 'AM' && currentDeskForModal.availability_slots.AM.status !== 'free') ||\n                                        (bookingTimeSlot === 'PM' && currentDeskForModal.availability_slots.PM.status !== 'free') ||\n                                        (bookingTimeSlot === 'FULL' && (currentDeskForModal.availability_slots.AM.status !== 'free' || currentDeskForModal.availability_slots.PM.status !== 'free'))\n                                    }\n                                >\n                                    Забронировать\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default BookingTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}